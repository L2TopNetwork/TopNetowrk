package com.l2jserver.gameserver.voteEngine;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.logging.Logger;

/**
 * @author Reunion Team
 * @author www.l2reunion.eu
 */
public class VoteRead
{
	private static final Logger _log = Logger.getLogger(VoteRead.class.getName());
	// Enter your http://l2network.eu/ server id
	// Example:
	// If your server link is http://l2network.eu/?a=details&u=Anius then your id is Anius
	private static String L2NetworkServerId = "Anius";
	
	public static long checkVotedIP(String IP)
	{
		long voteDate = 0;
		if (checkIfVoted("Network", IP))
		{
			voteDate = System.currentTimeMillis() / 1000L;
		}
		return voteDate;
	}
	
	private static boolean checkIfVoted(String Topsite, String IP)
	{
		String WordToCheck = "";
		boolean voted = false;
		URL url = null;
		InputStreamReader isr = null;
		try
		{
			switch (Topsite)
			{
				case "Network":
					url = new URL("http://l2network.eu/index.php?a=in&u=" + L2NetworkServerId + "&ipc=" + IP);
					WordToCheck = "0"; // This is the word that API returns if you haven't voted for Network
					break;
			}
			
			if (url != null)
			{
				isr = new InputStreamReader(url.openStream());
				BufferedReader br = new BufferedReader(isr);
				String strLine;
				while ((strLine = br.readLine()) != null) // Read File Line By Line
				{
					if (!strLine.equals(WordToCheck))
					{
						voted = true;
					}
				}
				isr.close(); // Close the input stream
			}
		}
		catch (Exception e) // Catch exception if any
		{
			_log.warning("VoteRead: ERROR: " + e);
		}
		return voted;
	}
}
